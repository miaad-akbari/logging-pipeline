---
- name: Deploy Logging Pipeline to Production
  hosts: logging_servers
  become: yes
  gather_facts: no

  tasks:
    - name: Install git
      apt:
        name: git
        state: present
        update_cache: yes

    - name: Create application directory
      file:
        path: /opt/logging-pipeline
        state: directory
        mode: '0755'

    - name: Clone repository from GitHub
      git:
        repo: https://github.com/miaad-akbari/logging-pipeline.git
        dest: /opt/logging-pipeline
        version: main
        force: yes
      register: git_result

    - name: Show cloned files
      command: ls -la /opt/logging-pipeline
      register: ls_result
      changed_when: false

    - name: Display repository content
      debug:
        msg: "{{ ls_result.stdout_lines }}"

    - name: Install Docker
      apt:
        name: docker.io
        state: present

    - name: Install Docker Compose
      get_url:
        url: https://github.com/docker/compose/releases/download/v2.20.0/docker-compose-linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: '0755'

    - name: Verify Docker installation
      command: docker --version
      register: docker_version
      changed_when: false

    - name: Show Docker version
      debug:
        msg: "{{ docker_version.stdout }}"

    - name: Verify Docker Compose installation
      command: docker-compose --version
      register: compose_version
      changed_when: false

    - name: Show Docker Compose version
      debug:
        msg: "{{ compose_version.stdout }}"

    - name: Build and start all services
      command: docker-compose up -d --build
      args:
        chdir: /opt/logging-pipeline

    - name: Wait for services to start
      pause:
        seconds: 45

    - name: Check running containers
      command: docker ps
      register: container_status
      changed_when: false

    - name: Show container status
      debug:
        msg: "{{ container_status.stdout_lines }}"

    - name: Check service logs
      command: docker-compose logs --tail=10
      args:
        chdir: /opt/logging-pipeline
      register: service_logs
      changed_when: false

    - name: Show service logs
      debug:
        msg: "{{ service_logs.stdout_lines }}"

    - name: Make health check script executable
      file:
        path: /opt/logging-pipeline/run-health-checks.sh
        mode: '0755'

    - name: Run health checks
      command: ./run-health-checks.sh
      args:
        chdir: /opt/logging-pipeline
      register: health_result

    - name: Show health check results
      debug:
        msg: "{{ health_result.stdout_lines }}"

    - name: Deployment completed successfully
      debug:
        msg: |
          ========================================
          DEPLOYMENT SUCCESSFUL!
          ========================================
          Application: /opt/logging-pipeline
          Repository: https://github.com/miaad-akbari/logging-pipeline.git
          Containers are running successfully
          Health checks passed
          ========================================