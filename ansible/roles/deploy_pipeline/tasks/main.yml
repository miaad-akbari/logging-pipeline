- name: Create application directory
  file:
    path: "{{ app_dir }}"
    state: directory
    mode: '0755'

- name: Clone repository (for config and consumer code)
  git:
    repo: "{{ repo_url }}"
    dest: "{{ app_dir }}"
    version: main
    force: yes

- name: Create docker-compose.yml from template
  template:
    src: docker-compose.yml.j2
    dest: "{{ app_dir }}/docker-compose.yml"
    mode: '0644'

- name: Stop any existing services
  shell: |
    cd {{ app_dir }} && docker-compose down
  ignore_errors: yes
  changed_when: false

- name: Pull latest images first
  shell: |
    cd {{ app_dir }} && docker-compose pull
  register: pull_result
  changed_when: pull_result.rc == 0

- name: Start services without build
  shell: |
    cd {{ app_dir }} && docker-compose up -d --build
  async: 600  # 10 minutes timeout
  poll: 0  # Don't wait for completion
  register: compose_up

- name: Wait for services to start (with timeout)
  async_status:
    jid: "{{ compose_up.ansible_job_id }}"
  register: compose_result
  until: compose_result.finished
  retries: 60
  delay: 10  # Total 10 minutes wait

- name: Check if services started successfully
  shell: |
    cd {{ app_dir }} && docker-compose ps --services | wc -l
  register: service_count
  changed_when: false

- name: Show service count
  debug:
    msg: "Number of services: {{ service_count.stdout }}"

- name: Check running containers
  shell: |
    cd {{ app_dir }} && docker-compose ps
  register: container_status
  changed_when: false

- name: Show container status
  debug:
    msg: "{{ container_status.stdout }}"

- name: Check service health
  shell: |
    cd {{ app_dir }} && timeout 30 docker-compose logs --tail=10
  register: service_logs
  changed_when: false
  ignore_errors: yes

- name: Display service logs
  debug:
    msg: "{{ service_logs.stdout_lines }}"
